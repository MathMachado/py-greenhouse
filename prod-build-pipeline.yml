trigger:
  branches:
    include:
    - production

schedules:
- cron: "0 1 * * *"
  displayName: constant build at 1:00 am every day of the week
  branches:
    include:
    - production
  always: true

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'
  displayName: Use Python 3.8

- task: DownloadSecureFile@1
  name: SettingProfile
  displayName: 'Downloading Profile for Snowflake'
  inputs:
    secureFile: 'azure_pipeline_dbt_profile.yml'

- script: |
    echo Installing $(SettingProfile.secureFilePath) to the ~/.dbt...
    mkdir ~/.dbt
    cp $(SettingProfile.secureFilePath) ~/.dbt/profiles.yml
  displayName: Installing Profile for Snowflake

- script: |
    pip install --user poetry
    echo '##vso[task.prependpath]$(HOME)/.local/bin'
  displayName: Installing poetry

- script: |
    make install
  displayName: Installing dbt and dependencies

- script: |
    DBT_PASSWORD='$(dbt_prod_password)' make seed target=prod
  displayName: Writing seed data

- script: |
    DBT_PASSWORD='$(dbt_prod_password)' make snapshot target=prod
  displayName: Taking a snapshot of landing tables

- script: |
    DBT_PASSWORD='$(dbt_prod_password)' make run target=prod
  displayName: Building models

- script: |
    DBT_PASSWORD='$(dbt_prod_password)' make docs target=prod
  displayName: Generating dbt warehouse docs

- task: CopyFiles@2
  inputs:
    SourceFolder: 'target'
    Contents: |
      *.json
      *.html
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    flattenFolders: true
  displayName: Copy files to $(Build.ArtifactStagingDirectory)

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'il-dbt-warehouse-docs - Azure'
    appType: 'webAppLinux'
    WebAppName: 'il-dbt-warehouse-docs'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'
    RuntimeStack: 'STATICSITE|1.0'
